{"ast":null,"code":"var _jsxFileName = \"/Users/harim/Desktop/momentum/reacthooks/src/App.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const useInput = (inputValue, validator) => {\n    _s();\n\n    const [value, setValue] = useState(inputValue);\n\n    const onChange = e => {\n      let willUpdate = true;\n\n      if (typeof validator === \"function\") {\n        willUpdate = validator(value);\n      }\n\n      if (willUpdate) {\n        setValue(e.target.value);\n      }\n\n      if (willUpdate === false) {\n        setValue(\"\");\n        alert(\"재입력하세요\");\n      }\n    };\n\n    const onReset = e => {\n      console.log(value);\n      setValue(\"Mr.\");\n    };\n\n    return {\n      value,\n      onChange,\n      onReset\n    };\n  };\n\n  _s(useInput, \"rvgs/zc4ewXTNxNXLC30HQzKyZo=\");\n\n  const maxLen = value => {\n    return !value.includes(\"@\");\n  };\n\n  const name = useInput(\"Mr.\", maxLen);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Name\",\n      ...name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: name.onReset,\n      children: \"\\uD655\\uC778 \\uB9AC\\uC14B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"KX9jBLD19Oaqt4W2y+pGAiFZrUA=\", true);\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/harim/Desktop/momentum/reacthooks/src/App.js"],"names":["React","useState","App","useInput","inputValue","validator","value","setValue","onChange","e","willUpdate","target","alert","onReset","console","log","maxLen","includes","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAAA;;AAC5B,QAAMC,QAAQ,GAAG,CAACC,UAAD,EAAaC,SAAb,KAA2B;AAAA;;AAC1C,UAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACG,UAAD,CAAlC;;AACA,UAAMI,QAAQ,GAAIC,CAAD,IAAO;AACtB,UAAIC,UAAU,GAAG,IAAjB;;AAEA,UAAI,OAAOL,SAAP,KAAqB,UAAzB,EAAqC;AACnCK,QAAAA,UAAU,GAAGL,SAAS,CAACC,KAAD,CAAtB;AACD;;AAED,UAAII,UAAJ,EAAgB;AACdH,QAAAA,QAAQ,CAACE,CAAC,CAACE,MAAF,CAASL,KAAV,CAAR;AACD;;AACD,UAAGI,UAAU,KAAK,KAAlB,EAAwB;AACtBH,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAK,QAAAA,KAAK,CAAC,QAAD,CAAL;AACD;AACF,KAdD;;AAgBA,UAAMC,OAAO,GAAIJ,CAAD,IAAO;AACrBK,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACAC,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,KAHD;;AAIA,WAAO;AAAED,MAAAA,KAAF;AAASE,MAAAA,QAAT;AAAmBK,MAAAA;AAAnB,KAAP;AACD,GAvBD;;AAD4B,KACtBV,QADsB;;AA0B5B,QAAMa,MAAM,GAAIV,KAAD,IAAW;AACxB,WAAO,CAACA,KAAK,CAACW,QAAN,CAAe,GAAf,CAAR;AACD,GAFD;;AAIA,QAAMC,IAAI,GAAGf,QAAQ,CAAC,KAAD,EAAQa,MAAR,CAArB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,WAAW,EAAC,MAAnB;AAAA,SAA8BE;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEA,IAAI,CAACL,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;IAvCuBX,G;;KAAAA,G","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function App() {\n  const useInput = (inputValue, validator) => {\n    const [value, setValue] = useState(inputValue);\n    const onChange = (e) => {\n      let willUpdate = true;\n\n      if (typeof validator === \"function\") {\n        willUpdate = validator(value);\n      }\n\n      if (willUpdate) {\n        setValue(e.target.value);\n      }\n      if(willUpdate === false){\n        setValue(\"\")\n        alert(\"재입력하세요\")\n      }\n    };\n\n    const onReset = (e) => {\n      console.log(value);\n      setValue(\"Mr.\");\n    };\n    return { value, onChange, onReset };\n  };\n\n  const maxLen = (value) => {\n    return !value.includes(\"@\");\n  };\n\n  const name = useInput(\"Mr.\", maxLen);\n\n  return (\n    <div className=\"App\">\n      <h1>Hello </h1>\n      <input placeholder=\"Name\" {...name} />\n      <button onClick={name.onReset}>확인 리셋</button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}