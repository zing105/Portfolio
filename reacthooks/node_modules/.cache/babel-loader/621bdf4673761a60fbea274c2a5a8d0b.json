{"ast":null,"code":"var _jsxFileName = \"/Users/harim/Desktop/momentum/reacthooks/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useNotification = (title, options) => {\n  if (!(\"Notification\" in window)) {\n    return;\n  }\n\n  const fireNotif = () => {\n    if (Notification.performance !== \"granted\") {\n      Notification.requestPermission().then(Permission);\n    } else {\n      new Notification(title, options);\n    }\n  };\n};\n\nconst App = () => {\n  _s();\n\n  const triggerNotif = useNotification();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC548\\uB155\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"57waNW7/BgwxTQ8+lG9CfjmEVoM=\", false, function () {\n  return [useNotification];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/harim/Desktop/momentum/reacthooks/src/App.js"],"names":["React","useNotification","title","options","window","fireNotif","Notification","performance","requestPermission","then","Permission","App","triggerNotif"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAmB;AACzC,MAAG,EAAE,kBAAkBC,MAApB,CAAH,EAA+B;AAC7B;AACD;;AAED,QAAMC,SAAS,GAAG,MAAK;AACrB,QAAGC,YAAY,CAACC,WAAb,KAA6B,SAAhC,EAA0C;AACtCD,MAAAA,YAAY,CAACE,iBAAb,GAAiCC,IAAjC,CAAsCC,UAAtC;AACH,KAFD,MAEM;AACJ,UAAIJ,YAAJ,CAAiBJ,KAAjB,EAAwBC,OAAxB;AACD;AACF,GAND;AAQD,CAbD;;AAeA,MAAMQ,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,YAAY,GAAGX,eAAe,EAApC;AACA,sBACE;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAPD;;GAAMU,G;UACiBV,e;;;KADjBU,G;AASN,eAAeA,GAAf","sourcesContent":["import React from 'react';\n\n\nconst useNotification = (title, options) =>{\n  if(!(\"Notification\" in window)){\n    return;\n  }\n\n  const fireNotif = () =>{\n    if(Notification.performance !== \"granted\"){\n        Notification.requestPermission().then(Permission)\n    } else{\n      new Notification(title, options)\n    }\n  }\n\n};\n\nconst App = () => {\n  const triggerNotif = useNotification()\n  return (\n    <div>\n        <h1>안녕하세요</h1>\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}