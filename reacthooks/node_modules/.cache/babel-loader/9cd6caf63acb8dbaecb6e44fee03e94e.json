{"ast":null,"code":"var _jsxFileName = \"/Users/harim/Desktop/momentum/reacthooks/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useNetwork = onChange => {\n  _s();\n\n  const [status, setStatus] = useState(navigator.onLine);\n  useEffect(() => {\n    window.addEventListener(\"online\", handleChange);\n    window.removeEventListener(\"offline\", handleChange);\n  }, []);\n  return status;\n};\n\n_s(useNetwork, \"ndSOgYUDsx8doHMpRb+cTI7fHMo=\");\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC548\\uB155\\uD558\\uC138\\uC694 \\uB124\\uD2B8\\uC6CC\\uD06C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/harim/Desktop/momentum/reacthooks/src/App.js"],"names":["React","useEffect","useState","useNetwork","onChange","status","setStatus","navigator","onLine","window","addEventListener","handleChange","removeEventListener","App"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,UAAU,GAAGC,QAAQ,IAAG;AAAA;;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAACK,SAAS,CAACC,MAAX,CAApC;AACAP,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,YAAlC;AACAF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,SAA3B,EAAsCD,YAAtC;AACH,GAHQ,EAGP,EAHO,CAAT;AAIA,SAAON,MAAP;AACD,CAPD;;GAAMF,U;;AAWN,MAAMU,GAAG,GAAG,MAAM;AAChB,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;KAAMA,G;AAQN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst useNetwork = onChange =>{\n  const [status, setStatus] = useState(navigator.onLine);\n  useEffect(()=>{\n      window.addEventListener(\"online\", handleChange);\n      window.removeEventListener(\"offline\", handleChange);\n  },[])\n  return status;\n}\n\n\n\nconst App = () => {\n  return (\n    <div>\n      <h1>안녕하세요 네트워크</h1>\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}