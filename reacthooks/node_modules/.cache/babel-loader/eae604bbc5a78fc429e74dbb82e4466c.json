{"ast":null,"code":"import _slicedToArray from \"/Users/harim/Desktop/momentum/reacthooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/harim/Desktop/momentum/reacthooks/src/App.js\",\n    _this = this;\n\nimport React, { useState } from 'react';\nimport Onom from './component/Onom';\nimport Toww from './component/Toww';\nvar content = [{\n  //[0]\n  button: \"Section 1\",\n  page: /*#__PURE__*/React.createElement(Onom, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }\n  }),\n  color: \"blue\"\n}, {\n  button: \"Section 2\",\n  page: /*#__PURE__*/React.createElement(Toww, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }),\n  color: \"#000000\"\n}];\n\nvar App = function App() {\n  var useTabs = function useTabs(initialTab, allTabs) {\n    var _useState = useState(initialTab),\n        _useState2 = _slicedToArray(_useState, 3),\n        currentIndex = _useState2[0],\n        setCurrentIndex = _useState2[1],\n        setColor = _useState2[2]; //배열 확인 조건문(오류확인)\n\n\n    if (!allTabs || !Array.isArray(allTabs)) {\n      return alert(\"배열이아님\");\n    } // 컨텐트 리턴\n\n\n    return {\n      currentItem: allTabs[currentIndex],\n      changeItem: setCurrentIndex,\n      color: setColor\n    };\n  };\n\n  var _useTabs = useTabs(0, content),\n      currentItem = _useTabs.currentItem,\n      changeItem = _useTabs.changeItem;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, content.map(function (section, index, text) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: index,\n      onClick: function onClick() {\n        return changeItem(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 45\n      }\n    }, section.button);\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      backgroundColor: '#939393',\n      borderRadius: '10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, currentItem.page));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/harim/Desktop/momentum/reacthooks/src/App.js"],"names":["React","useState","Onom","Toww","content","button","page","color","App","useTabs","initialTab","allTabs","currentIndex","setCurrentIndex","setColor","Array","isArray","alert","currentItem","changeItem","map","section","index","text","backgroundColor","borderRadius"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAGA,IAAMC,OAAO,GAAG,CACd;AAAE;AACAC,EAAAA,MAAM,EAAC,WADT;AAEEC,EAAAA,IAAI,eAAE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR;AAGEC,EAAAA,KAAK,EAAC;AAHR,CADc,EAOd;AACEF,EAAAA,MAAM,EAAC,WADT;AAEEC,EAAAA,IAAI,eAAE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR;AAGEC,EAAAA,KAAK,EAAC;AAHR,CAPc,CAAhB;;AAeA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAEhB,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,UAAD,EAAaC,OAAb,EAAyB;AAAA,oBACWV,QAAQ,CAACS,UAAD,CADnB;AAAA;AAAA,QAChCE,YADgC;AAAA,QAClBC,eADkB;AAAA,QACDC,QADC,kBAIvC;;;AACA,QAAG,CAACH,OAAD,IAAY,CAACI,KAAK,CAACC,OAAN,CAAcL,OAAd,CAAhB,EAAuC;AACrC,aACEM,KAAK,CAAC,OAAD,CADP;AAGD,KATsC,CAWvC;;;AACA,WAAM;AACJC,MAAAA,WAAW,EAAEP,OAAO,CAACC,YAAD,CADhB;AAEJO,MAAAA,UAAU,EAAEN,eAFR;AAGJN,MAAAA,KAAK,EAAEO;AAHH,KAAN;AAOD,GAnBD;;AAFgB,iBAuBkBL,OAAO,CAAC,CAAD,EAAIL,OAAJ,CAvBzB;AAAA,MAuBTc,WAvBS,YAuBTA,WAvBS;AAAA,MAuBIC,UAvBJ,YAuBIA,UAvBJ;;AAwBhB,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,OAAO,CAACgB,GAAR,CAAY,UAACC,OAAD,EAAUC,KAAV,EAAgBC,IAAhB;AAAA,wBAAyB;AAAQ,MAAA,GAAG,EAAED,KAAb;AAAoB,MAAA,OAAO,EAAE;AAAA,eAAMH,UAAU,CAACG,KAAD,CAAhB;AAAA,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuDD,OAAO,CAAChB,MAA/D,CAAzB;AAAA,GAAZ,CADH,eAEE;AAAI,IAAA,KAAK,EAAE;AAACmB,MAAAA,eAAe,EAAC,SAAjB;AAA2BC,MAAAA,YAAY,EAAC;AAAxC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6DP,WAAW,CAACZ,IAAzE,CAFF,CADF;AAMD,CA9BD;;AAgCA,eAAeE,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport Onom from './component/Onom';\nimport Toww from './component/Toww';\n\n\nconst content = [\n  { //[0]\n    button:\"Section 1\",\n    page: <Onom/>,\n    color:\"blue\"\n    \n  },\n  {\n    button:\"Section 2\",\n    page: <Toww/>,\n    color:\"#000000\"\n\n  }\n]\n\nconst App = () => {\n\n  const useTabs = (initialTab, allTabs) => {\n    const [currentIndex, setCurrentIndex, setColor] = useState(initialTab)\n\n\n    //배열 확인 조건문(오류확인)\n    if(!allTabs || !Array.isArray(allTabs)){\n      return(\n        alert(\"배열이아님\")\n      )\n    }\n   \n    // 컨텐트 리턴\n    return{\n      currentItem: allTabs[currentIndex],\n      changeItem: setCurrentIndex,\n      color: setColor\n      \n    }\n    \n  }\n  \n  const {currentItem, changeItem} = useTabs(0, content);\n  return (\n    <div>\n      {content.map((section, index,text) => <button key={index} onClick={() => changeItem(index)}>{section.button}</button>)}\n      <h1 style={{backgroundColor:'#939393',borderRadius:'10px'}}>{currentItem.page}</h1>\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}